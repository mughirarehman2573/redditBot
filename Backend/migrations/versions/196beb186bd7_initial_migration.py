"""Initial Migration

Revision ID: 196beb186bd7
Revises: 
Create Date: 2025-08-22 11:49:38.548060

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '196beb186bd7'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('reddit_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.String(length=500), nullable=False),
    sa.Column('refresh_token', sa.String(length=500), nullable=False),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('niche', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_accounts_owner_id'), 'reddit_accounts', ['owner_id'], unique=False)
    op.create_index(op.f('ix_reddit_accounts_username'), 'reddit_accounts', ['username'], unique=False)
    op.create_table('reddit_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('reddit_id', sa.String(length=40), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_utc', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['reddit_accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_comments_account_id'), 'reddit_comments', ['account_id'], unique=False)
    op.create_index(op.f('ix_reddit_comments_created_utc'), 'reddit_comments', ['created_utc'], unique=False)
    op.create_index(op.f('ix_reddit_comments_reddit_id'), 'reddit_comments', ['reddit_id'], unique=True)
    op.create_table('reddit_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('reddit_id', sa.String(length=40), nullable=False),
    sa.Column('title', sa.String(length=300), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('created_utc', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['reddit_accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_posts_account_id'), 'reddit_posts', ['account_id'], unique=False)
    op.create_index(op.f('ix_reddit_posts_created_utc'), 'reddit_posts', ['created_utc'], unique=False)
    op.create_index(op.f('ix_reddit_posts_reddit_id'), 'reddit_posts', ['reddit_id'], unique=True)
    op.create_table('reddit_schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('run_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['reddit_accounts.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reddit_schedules_account_id'), 'reddit_schedules', ['account_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_reddit_schedules_account_id'), table_name='reddit_schedules')
    op.drop_table('reddit_schedules')
    op.drop_index(op.f('ix_reddit_posts_reddit_id'), table_name='reddit_posts')
    op.drop_index(op.f('ix_reddit_posts_created_utc'), table_name='reddit_posts')
    op.drop_index(op.f('ix_reddit_posts_account_id'), table_name='reddit_posts')
    op.drop_table('reddit_posts')
    op.drop_index(op.f('ix_reddit_comments_reddit_id'), table_name='reddit_comments')
    op.drop_index(op.f('ix_reddit_comments_created_utc'), table_name='reddit_comments')
    op.drop_index(op.f('ix_reddit_comments_account_id'), table_name='reddit_comments')
    op.drop_table('reddit_comments')
    op.drop_index(op.f('ix_reddit_accounts_username'), table_name='reddit_accounts')
    op.drop_index(op.f('ix_reddit_accounts_owner_id'), table_name='reddit_accounts')
    op.drop_table('reddit_accounts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
