"""Add created_at to RedditAccount

Revision ID: 203b180c2ed4
Revises: 
Create Date: 2025-08-22 00:44:02.227350

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '203b180c2ed4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_reddit_accounts_id', table_name='reddit_accounts')
    op.drop_index('ix_reddit_accounts_reddit_username', table_name='reddit_accounts')
    op.drop_table('reddit_accounts')
    op.drop_index('ix_task_schedules_id', table_name='task_schedules')
    op.drop_index('ix_task_schedules_name', table_name='task_schedules')
    op.drop_table('task_schedules')
    op.drop_table('schedule_subreddit')
    op.drop_index('ix_system_config_id', table_name='system_config')
    op.drop_index('ix_system_config_key', table_name='system_config')
    op.drop_table('system_config')
    op.drop_index('ix_activity_logs_id', table_name='activity_logs')
    op.drop_table('activity_logs')
    op.drop_table('account_niche')
    op.drop_index('ix_niches_id', table_name='niches')
    op.drop_index('ix_niches_name', table_name='niches')
    op.drop_table('niches')
    op.drop_index('ix_subreddit_targets_id', table_name='subreddit_targets')
    op.drop_index('ix_subreddit_targets_name', table_name='subreddit_targets')
    op.drop_table('subreddit_targets')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_content_pools_id', table_name='content_pools')
    op.drop_index('ix_content_pools_name', table_name='content_pools')
    op.drop_table('content_pools')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('content_pools',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('content_type', sa.VARCHAR(), nullable=False),
    sa.Column('content_format', sa.VARCHAR(), nullable=True),
    sa.Column('content_data', sqlite.JSON(), nullable=False),
    sa.Column('variables', sqlite.JSON(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('niche_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['niche_id'], ['niches.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_content_pools_name', 'content_pools', ['name'], unique=False)
    op.create_index('ix_content_pools_id', 'content_pools', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(), nullable=False),
    sa.Column('username', sa.VARCHAR(), nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('last_login', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=False)
    op.create_table('subreddit_targets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('niche_id', sa.INTEGER(), nullable=True),
    sa.Column('min_karma_required', sa.INTEGER(), nullable=True),
    sa.Column('min_account_age_days', sa.INTEGER(), nullable=True),
    sa.Column('post_cooldown_minutes', sa.INTEGER(), nullable=True),
    sa.Column('comment_cooldown_minutes', sa.INTEGER(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.ForeignKeyConstraint(['niche_id'], ['niches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_subreddit_targets_name', 'subreddit_targets', ['name'], unique=False)
    op.create_index('ix_subreddit_targets_id', 'subreddit_targets', ['id'], unique=False)
    op.create_table('niches',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_niches_name', 'niches', ['name'], unique=False)
    op.create_index('ix_niches_id', 'niches', ['id'], unique=False)
    op.create_table('account_niche',
    sa.Column('reddit_account_id', sa.INTEGER(), nullable=False),
    sa.Column('niche_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['niche_id'], ['niches.id'], ),
    sa.ForeignKeyConstraint(['reddit_account_id'], ['reddit_accounts.id'], ),
    sa.PrimaryKeyConstraint('reddit_account_id', 'niche_id')
    )
    op.create_table('activity_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('action_type', sa.VARCHAR(), nullable=False),
    sa.Column('status', sa.VARCHAR(), nullable=False),
    sa.Column('target_subreddit', sa.VARCHAR(), nullable=True),
    sa.Column('content_preview', sa.TEXT(), nullable=True),
    sa.Column('reddit_id', sa.VARCHAR(), nullable=True),
    sa.Column('error_message', sa.TEXT(), nullable=True),
    sa.Column('response_data', sqlite.JSON(), nullable=True),
    sa.Column('execution_time', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('account_id', sa.INTEGER(), nullable=False),
    sa.Column('schedule_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['reddit_accounts.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['task_schedules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_activity_logs_id', 'activity_logs', ['id'], unique=False)
    op.create_table('system_config',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('key', sa.VARCHAR(), nullable=False),
    sa.Column('value', sqlite.JSON(), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_system_config_key', 'system_config', ['key'], unique=False)
    op.create_index('ix_system_config_id', 'system_config', ['id'], unique=False)
    op.create_table('schedule_subreddit',
    sa.Column('task_schedule_id', sa.INTEGER(), nullable=False),
    sa.Column('subreddit_target_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['subreddit_target_id'], ['subreddit_targets.id'], ),
    sa.ForeignKeyConstraint(['task_schedule_id'], ['task_schedules.id'], ),
    sa.PrimaryKeyConstraint('task_schedule_id', 'subreddit_target_id')
    )
    op.create_table('task_schedules',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=True),
    sa.Column('task_type', sa.VARCHAR(), nullable=False),
    sa.Column('frequency_type', sa.VARCHAR(), nullable=False),
    sa.Column('frequency_value', sa.INTEGER(), nullable=False),
    sa.Column('start_time', sa.DATETIME(), nullable=True),
    sa.Column('end_time', sa.DATETIME(), nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), nullable=True),
    sa.Column('is_warmup', sa.BOOLEAN(), nullable=True),
    sa.Column('warmup_level', sa.INTEGER(), nullable=True),
    sa.Column('randomize_timing', sa.BOOLEAN(), nullable=True),
    sa.Column('time_variance', sa.INTEGER(), nullable=True),
    sa.Column('max_daily_actions', sa.INTEGER(), nullable=True),
    sa.Column('target_type', sa.VARCHAR(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.Column('account_id', sa.INTEGER(), nullable=False),
    sa.Column('content_pool_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['reddit_accounts.id'], ),
    sa.ForeignKeyConstraint(['content_pool_id'], ['content_pools.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_task_schedules_name', 'task_schedules', ['name'], unique=False)
    op.create_index('ix_task_schedules_id', 'task_schedules', ['id'], unique=False)
    op.create_table('reddit_accounts',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('reddit_username', sa.VARCHAR(), nullable=False),
    sa.Column('access_token', sa.VARCHAR(), nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(), nullable=True),
    sa.Column('token_expires', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('last_activity', sa.DATETIME(), nullable=True),
    sa.Column('total_posts', sa.INTEGER(), nullable=True),
    sa.Column('total_comments', sa.INTEGER(), nullable=True),
    sa.Column('karma', sa.INTEGER(), nullable=True),
    sa.Column('account_age_days', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_reddit_accounts_reddit_username', 'reddit_accounts', ['reddit_username'], unique=False)
    op.create_index('ix_reddit_accounts_id', 'reddit_accounts', ['id'], unique=False)
    # ### end Alembic commands ###
